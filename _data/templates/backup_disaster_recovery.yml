# Template: Backup and Disaster Recovery Guide
# Template ID: backup_disaster_recovery
# Intent Type: practitioner
# Coverage: 40+ keywords (backup, restore, disaster recovery, business continuity)
# Variables Required: {{odoo_version}}, {{backup_strategy}}, {{recovery_time_objective}}, {{backup_storage}}
# Reusable Modules: odoo_versions/odoo_{{odoo_version}}.yml, backup/backup_strategies.yml

metadata:
  title: "Odoo {{odoo_version}} Backup & Disaster Recovery: Complete Protection Guide"
  description: "Implement robust backup and disaster recovery for Odoo {{odoo_version}}. Learn backup strategies, automated solutions, recovery procedures, and business continuity planning."
  intent_type: "practitioner"
  page_slug: "odoo-{{odoo_version}}-{{backup_strategy}}-disaster-recovery"
  draft_metadata:
    created_by: "pseo-bulk-generator"
    template_id: "backup_disaster_recovery"
    generation_mode: "template"
    confidence_level: "high"
    notes_for_reviewer: "Verify backup commands match Odoo {{odoo_version}}. Check storage provider APIs are current."

static_data:
  # Backup Context
  odoo_version: "{{odoo_version}}"  # 14/15/16/17/18
  backup_strategy: "{{backup_strategy}}"  # full/incremental/differential/continuous
  recovery_time_objective: "{{rto}}"  # 1-hour/4-hours/24-hours
  recovery_point_objective: "{{rpo}}"  # 15-min/1-hour/24-hours
  backup_storage: "{{backup_storage}}"  # local/s3/azure-blob/gcs/nas

  # Backup Components
  backup_components:
    database:
      type: "PostgreSQL {{postgres_version}}"
      backup_methods:
        - method: "pg_dump"
          frequency: "{{db_backup_frequency}}"
          retention: "{{db_retention_days}} days"
        - method: "pg_basebackup"
          frequency: "Daily"
          retention: "7 days"
        - method: "WAL archiving"
          frequency: "Continuous"
          retention: "{{wal_retention_hours}} hours"

    filestore:
      location: "/var/lib/odoo/filestore/{{database_name}}"
      size_estimate: "{{filestore_size_gb}} GB"
      backup_method: "{{filestore_backup_method}}"  # rsync/tar/restic
      compression: "{{compression_algorithm}}"  # gzip/bzip2/lz4/zstd

    configuration:
      files:
        - "/etc/odoo/odoo.conf"
        - "/etc/odoo/odoo-server.conf"
        - "{{custom_config_path}}"
      backup_method: "Version control"
      repository: "{{config_repo}}"

  # Backup Strategies
  backup_strategies:
    - strategy: "3-2-1 Rule"
      description: "3 copies, 2 different media, 1 offsite"
      implementation:
        primary: "Local NAS storage"
        secondary: "Cloud storage ({{backup_storage}})"
        tertiary: "Offline/Cold storage"

    - strategy: "Grandfather-Father-Son"
      description: "Tiered retention periods"
      schedule:
        daily: "7 backups retained"
        weekly: "4 backups retained"
        monthly: "12 backups retained"
        yearly: "{{yearly_retention}} backups retained"

  # Recovery Procedures
  recovery_procedures:
    - scenario: "Database Corruption"
      rto: "{{db_corruption_rto}}"
      steps:
        - step: "Stop Odoo service"
          command: "sudo systemctl stop odoo"
        - step: "Restore database from backup"
          command: "pg_restore -d {{database_name}} {{backup_file}}"
        - step: "Verify database integrity"
          command: "psql -d {{database_name}} -c 'SELECT COUNT(*) FROM ir_module_module;'"
        - step: "Start Odoo service"
          command: "sudo systemctl start odoo"

    - scenario: "Complete System Failure"
      rto: "{{system_failure_rto}}"
      steps:
        - step: "Provision new infrastructure"
          tool: "{{infrastructure_tool}}"  # terraform/ansible/cloud-console
        - step: "Restore system configuration"
          command: "ansible-playbook restore-config.yml"
        - step: "Restore database"
          command: "{{restore_database_command}}"
        - step: "Restore filestore"
          command: "{{restore_filestore_command}}"
        - step: "Verify application functionality"
          checklist: ["Login", "Create test record", "Generate report", "Check integrations"]

    - scenario: "Ransomware Attack"
      rto: "{{ransomware_rto}}"
      steps:
        - step: "Isolate affected systems"
          action: "Disconnect from network"
        - step: "Identify clean backup"
          verification: "Check backup integrity logs"
        - step: "Provision clean infrastructure"
          requirement: "Use isolated recovery environment"
        - step: "Restore from verified backup"
          validation: "Compare checksums"

  # Automation Scripts
  automation_tools:
    - tool: "Automated Backup Script"
      language: "bash"
      schedule: "{{backup_schedule}}"  # cron expression
      features:
        - "Database backup with pg_dump"
        - "Filestore synchronization"
        - "Compression and encryption"
        - "Upload to {{backup_storage}}"
        - "Retention management"
        - "Email notifications"

    - tool: "Recovery Validation"
      frequency: "{{validation_frequency}}"
      process:
        - "Restore to test environment"
        - "Run automated tests"
        - "Generate validation report"
        - "Update recovery documentation"

  # Business Continuity
  business_continuity:
    disaster_recovery_plan:
      activation_triggers:
        - "Data center outage > {{outage_threshold}}"
        - "Data corruption affecting > {{corruption_threshold}}% of records"
        - "Cyber security incident"
        - "Natural disaster"

      communication_plan:
        - role: "Incident Commander"
          responsibility: "Overall coordination"
        - role: "Technical Lead"
          responsibility: "Recovery execution"
        - role: "Communications Lead"
          responsibility: "Stakeholder updates"

      recovery_priorities:
        - priority: 1
          system: "Core ERP functions"
          target_rto: "{{priority_1_rto}}"
        - priority: 2
          system: "Customer-facing services"
          target_rto: "{{priority_2_rto}}"
        - priority: 3
          system: "Reporting and analytics"
          target_rto: "{{priority_3_rto}}"

  # Monitoring and Testing
  monitoring:
    backup_monitoring:
      - metric: "Backup completion status"
        alert_condition: "Failed backup"
        notification: "{{alert_channel}}"
      - metric: "Backup size trend"
        alert_condition: "> {{size_threshold}}% change"
        notification: "{{alert_channel}}"
      - metric: "Recovery time"
        alert_condition: "> {{rto_threshold}}"
        notification: "{{alert_channel}}"

    testing_schedule:
      - test: "Backup verification"
        frequency: "Daily"
        automated: true
      - test: "Partial recovery"
        frequency: "Weekly"
        automated: true
      - test: "Full disaster recovery"
        frequency: "{{dr_test_frequency}}"
        automated: false

ai_generated_content:
  introduction: ""

  # Main backup strategy guide - standard field
  step_by_step_guide: ""

  # Recovery procedures - standard field
  implementation_guide: ""

  # Disaster recovery planning - standard field
  deployment_guide: ""

  # Troubleshooting backup issues - standard field
  troubleshooting_guide: ""

  # Security for backups - standard field
  security_guide: ""

  # Optimization and best practices - standard field
  optimization_guide: ""

  conclusion: ""

intelligent_links:
  - link_text: "Automated Backup Scripts"
    relevance_score: 0.95
    intent_match: "technical"
    placement_hint: "mid_guide"
    generated_link: ""

  - link_text: "Cloud Storage Configuration"
    relevance_score: 0.92
    intent_match: "implementation"
    placement_hint: "post_storage"
    generated_link: ""

  - link_text: "Disaster Recovery Testing"
    relevance_score: 0.88
    intent_match: "planning"
    placement_hint: "post_content"
    generated_link: ""

conversion_assets:
  - asset_id: "backup_hero"
    component_type: "hero-section"
    headline: "Protect Your Odoo {{odoo_version}} Data"
    subheadline: "Enterprise backup and disaster recovery solutions"
    cta_text: "Get Backup Solution"
    cta_link: "#backup-implementation"
    placement_hint: "above_fold"
    generated_copy: ""

  - asset_id: "backup_script_download"
    component_type: "callout-box"
    headline: "Free Automated Backup Script"
    body: "Download our production-tested backup script for Odoo {{odoo_version}} with {{backup_storage}} integration"
    cta_text: "Download Script"
    cta_link: "/resources/backup-script-{{odoo_version}}"
    placement_hint: "mid_guide"
    style: "success"
    generated_copy: ""

  - asset_id: "dr_benefits"
    component_type: "benefit-list"
    headline: "Why Professional Backup & DR?"
    benefits:
      - "{{rpo}} recovery point objective"
      - "{{rto}} recovery time objective"
      - "Automated daily backups"
      - "Encrypted offsite storage"
      - "Regular recovery testing"
    placement_hint: "post_technical"
    generated_copy: ""

  - asset_id: "dr_assessment"
    component_type: "lead-form"
    headline: "Free Disaster Recovery Assessment"
    fields: ["name", "email", "company", "current_backup_solution"]
    submit_text: "Get Assessment"
    placement_hint: "post_content"
    generated_copy: ""

code_examples:
  - example_id: "backup_script"
    title: "Automated Backup Script"
    language: "bash"
    code: |
      #!/bin/bash
      # Odoo {{odoo_version}} Backup Script

      # Configuration
      DB_NAME="{{database_name}}"
      DB_USER="{{db_user}}"
      BACKUP_DIR="/backup/odoo"
      S3_BUCKET="{{s3_bucket_name}}"
      RETENTION_DAYS={{retention_days}}

      # Create backup
      TIMESTAMP=$(date +%Y%m%d_%H%M%S)
      BACKUP_FILE="${BACKUP_DIR}/${DB_NAME}_${TIMESTAMP}"

      # Backup database
      pg_dump -U ${DB_USER} -d ${DB_NAME} -f "${BACKUP_FILE}.sql"

      # Backup filestore
      tar -czf "${BACKUP_FILE}_filestore.tar.gz" \
        /var/lib/odoo/filestore/${DB_NAME}

      # Upload to S3
      aws s3 cp "${BACKUP_FILE}.sql" \
        "s3://${S3_BUCKET}/backups/${DB_NAME}/"
      aws s3 cp "${BACKUP_FILE}_filestore.tar.gz" \
        "s3://${S3_BUCKET}/backups/${DB_NAME}/"

      # Clean old backups
      find ${BACKUP_DIR} -name "*.sql" -mtime +${RETENTION_DAYS} -delete
      find ${BACKUP_DIR} -name "*.tar.gz" -mtime +${RETENTION_DAYS} -delete

  - example_id: "restore_script"
    title: "Recovery Script"
    language: "bash"
    code: |
      #!/bin/bash
      # Odoo {{odoo_version}} Recovery Script

      # Configuration
      DB_NAME="{{database_name}}"
      DB_USER="{{db_user}}"
      BACKUP_FILE="$1"

      # Stop Odoo
      sudo systemctl stop odoo

      # Drop existing database
      dropdb -U ${DB_USER} ${DB_NAME}

      # Create new database
      createdb -U ${DB_USER} ${DB_NAME}

      # Restore database
      psql -U ${DB_USER} -d ${DB_NAME} < ${BACKUP_FILE}

      # Restore filestore
      tar -xzf ${BACKUP_FILE}_filestore.tar.gz -C /

      # Fix permissions
      chown -R odoo:odoo /var/lib/odoo/filestore/${DB_NAME}

      # Start Odoo
      sudo systemctl start odoo

related_keywords:
  primary:
    - "odoo {{odoo_version}} backup"
    - "odoo disaster recovery"
    - "odoo data protection"

  secondary:
    - "odoo {{backup_strategy}} backup"
    - "odoo backup {{backup_storage}}"
    - "odoo recovery procedures"

  long_tail:
    - "how to backup odoo {{odoo_version}} database and filestore"
    - "odoo {{odoo_version}} disaster recovery plan"
    - "automated backup script for odoo {{odoo_version}}"