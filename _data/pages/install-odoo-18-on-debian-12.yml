metadata:
  title: 'Install Odoo 18 on Debian 12: Complete 2025 Guide'
  description: Install Odoo 18 on Debian 12 from source. PostgreSQL 15, Python 3.11,
    NGINX setup.
  intent_type: practitioner
  page_slug: install-odoo-18-on-debian-12
  draft_metadata:
    created_by: pseo-bulk-generator
    template_id: os_installation
    generation_date: '2025-10-27'
    template_generated: true
    template_generation_date: '2025-10-28T19:32:18.492459'
static_data:
  os_name: Debian
  os_version: '12'
  odoo_version: '18'
  recommended_for: Production and development environments
  key_commands:
    update: sudo apt update && sudo apt upgrade -y
    install_postgresql: sudo apt install -y postgresql-15
    install_python: sudo apt install -y python3.11 python3-pip
    clone_odoo: git clone https://github.com/odoo/odoo --depth 1 --branch 18.0
  estimated_time: 30-45 minutes
  python_version: '3.11'
  postgresql_version: '15'
  support_end_date: 2028-06
  systemd_version: '252'
  recommended_ram_gb: '4'
ai_generated_content:
  introduction: 'Debian 12 delivers the specific combination of long-term support,
    modern kernel features, and package versions that Odoo 18 requires without manual
    dependency management. Where earlier Debian releases force you to add third-party
    repositories for recent Python builds or compile PostgreSQL from source, 12 includes
    Python 3.11 and PostgreSQL 15 in official apt repositories maintained through
    2029.


    The technical implications extend beyond package availability. Debian 12 ships
    with systemd 249, which includes hardening features like ProtectSystem and PrivateTmp
    that sandbox Odoo processes without performance overhead. The kernel version supports
    transparent huge pages, which PostgreSQL leverages for query caching efficiency
    on systems with 8GB or more RAM. These aren''t theoretical optimizations—they''re
    measurable improvements in report generation speed and concurrent user capacity.


    This installation guide focuses specifically on Install Odoo 18 on Debian 12:
    Complete 2025 Guide, accounting for the distribution-specific differences in package
    names, default firewall configurations, and service management commands that generic
    Odoo tutorials ignore. You will configure the OS for production Odoo workloads,
    install all required dependencies from verified repositories, tune PostgreSQL
    for your hardware profile, and implement automated monitoring. The process takes
    under an hour and produces a system configuration that matches what managed Odoo
    hosting providers charge three hundred dollars monthly to maintain.

    '
  conclusion: 'Completing Install Odoo 18 on Debian 12: Complete 2025 Guide manually
    gave you operational knowledge that managed hosting providers charge premium prices
    to abstract away. You understand how Debian package management works, where PostgreSQL
    stores configuration files and data directories, how systemd manages service lifecycle,
    and which kernel parameters affect database performance. This knowledge eliminates
    dependency on vendor support tickets and empowers confident troubleshooting when
    production issues emerge.


    The operational mastery you gained through hands-on installation transfers across
    infrastructure platforms and survives vendor changes. Your understanding of PostgreSQL
    tuning principles applies whether you run on bare metal servers, cloud instances,
    or future infrastructure technologies. Your systemd service configuration knowledge
    works across any Linux distribution using systemd. You invested time learning
    fundamental technologies rather than provider-specific management interfaces—that
    knowledge remains valuable regardless of where your Odoo infrastructure runs.


    Maintain this knowledge through documentation and periodic practice. Record your
    installation decisions in a runbook that future administrators can follow. Review
    your configuration quarterly to understand any changes you made post-installation.
    Practice disaster recovery procedures annually to keep restoration skills current.
    The operational knowledge you built today represents organizational capital that
    appreciates rather than depreciates—that durability justifies the hands-on installation
    effort.



    Don''t wait for users to report problems. Download the [Odoo health monitoring
    script](/downloads/odoo-health-monitoring-script/) to track CPU, memory, PostgreSQL
    performance, and response times with automated alerts when thresholds breach.'
  troubleshooting_guide: '## Common Issues and Solutions


    **Issue: Odoo service fails to start after installation**


    Check the service status and logs to identify the specific error. Run `systemctl
    status odoo` to see if systemd reports configuration file errors, permission problems,
    or missing dependencies. Most startup failures trace to incorrect paths in the
    configuration file—verify `/etc/odoo/odoo.conf` contains valid paths to the Odoo
    installation directory, addons folders, and log file location. Check Python dependencies
    are installed by examining the log file at `/var/log/odoo/odoo-server.log`. Missing
    Python packages show "ImportError" or "ModuleNotFoundError" messages. Install
    missing packages using pip: `pip3 install package-name`. Verify the Odoo user
    has read/write permissions to the log directory and filestore path.


    **Issue: Database connection errors**


    Odoo cannot connect to PostgreSQL, typically showing "FATAL: password authentication
    failed" or "could not connect to server" errors. Verify PostgreSQL is running
    with `systemctl status postgresql`, confirm the Odoo database user exists with
    correct credentials, and check `pg_hba.conf` allows local connections. The Odoo
    configuration file''s `db_user`, `db_password`, and `db_host` parameters must
    match your PostgreSQL setup exactly—case sensitivity matters for usernames.


    **Issue: Port 8069 not accessible from browser**


    The firewall blocks incoming connections to Odoo''s default port. Use UFW (Ubuntu/Debian)
    or firewalld (CentOS/Rocky Linux) to allow the port. For UFW: `sudo ufw allow
    8069/tcp`. For firewalld: `sudo firewall-cmd --permanent --add-port=8069/tcp &&
    sudo firewall-cmd --reload`. For production deployments behind NGINX reverse proxy,
    you should block external port 8069 access entirely and only expose ports 80/443,
    which NGINX proxies to Odoo''s localhost:8069.


    **Issue: Module installation fails with dependency errors**


    Odoo modules declare dependencies on other modules, and installation fails if
    dependencies are missing or if circular dependencies exist. Read the error message
    carefully—it specifies which module dependency is missing. Install missing modules
    through the Apps menu first, then retry the original module installation. For
    custom modules, verify the `__manifest__.py` file declares all dependencies in
    the `depends` list.


    **Issue: PDF generation produces blank or malformed documents**


    wkhtmltopdf installation issues cause this. Verify wkhtmltopdf works by running
    `/usr/local/bin/wkhtmltopdf --version`. If the command fails or returns "cannot
    open display", you installed the wrong version. Download the patched Qt version
    from wkhtmltopdf.org specifically for your OS distribution. On headless servers,
    wkhtmltopdf requires Xvfb for display emulation—install with `apt install xvfb`
    (Ubuntu/Debian) or `yum install xorg-x11-server-Xvfb` (CentOS/Rocky Linux).


    **Issue: Performance degradation with increasing users**


    PostgreSQL tuning is usually the bottleneck. Check `shared_buffers` in `/etc/postgresql/*/main/postgresql.conf`
    is set to 25% of system RAM. Monitor slow queries with `pg_stat_statements` extension.
    For immediate relief, restart PostgreSQL to clear memory fragmentation: `systemctl
    restart postgresql`. Long-term, add RAM or separate database to dedicated server.


    **Issue: Backup or restore operations fail**


    Check disk space with `df -h`—insufficient space causes silent backup failures.
    Verify the backup script has correct PostgreSQL credentials and the Odoo user
    can read the filestore directory. For restoration, ensure the target database
    is completely empty before restoring—Odoo cannot merge backups into existing databases.
    Use `dropdb` and `createdb` to ensure a clean target.


    **Issue: SSL certificate errors or mixed content warnings**


    Mixed content warnings occur when NGINX properly serves HTTPS but Odoo generates
    HTTP links internally. Set `proxy_mode = True` in `/etc/odoo/odoo.conf` and restart
    Odoo. For Let''s Encrypt certificates, verify Certbot renewal cron job exists:
    `crontab -l | grep certbot`. Test renewal manually with `certbot renew --dry-run`.

    '
  installation_guide: 'Installing Odoo 18 on Debian 12 from source code provides complete
    control over your ERP infrastructure—from database configuration through module
    selection to upgrade timing. Unlike managed hosting that abstracts infrastructure
    behind opaque control panels, source installation gives you direct access to configuration
    files, PostgreSQL tuning parameters, and system resources that determine whether
    your Odoo instance handles ten users or one hundred.


    The technical competency investment pays dividends throughout your Odoo lifecycle.
    When performance issues emerge, you diagnose PostgreSQL query patterns rather
    than filing support tickets. When security updates release, you apply them on
    your schedule after testing in staging environments. When module conflicts break
    functionality, you inspect Python stack traces and patch code directly. This operational
    sovereignty transforms Odoo from a rented service into infrastructure you control.


    ## Server Requirements and Architecture Decisions


    Installing Odoo 18 on Debian 12 requires careful consideration of your architecture
    before executing installation commands. The single-server deployment documented
    here suits businesses with 10-50 concurrent users and handles typical ERP workloads—accounting,
    inventory management, CRM, sales orders—without performance degradation. If your
    team exceeds 50 users or processes high-volume transactions (e-commerce with thousands
    of daily orders, manufacturing with complex bill-of-materials calculations), you
    need separated application and database tiers from the start.


    Debian''s legendary stability comes from its rigorous package testing process,
    where software spends months in testing repositories before reaching stable releases.
    This conservative approach means your Odoo server won''t experience package conflicts
    or dependency breakage from routine updates. The distribution''s minimal default
    installation provides a clean foundation without unnecessary services consuming
    resources.


    The installation process follows a specific sequence because later steps depend
    on earlier components. PostgreSQL must exist before you create the Odoo database
    user. Python dependencies must install before you clone Odoo''s source code. System
    users must exist before you assign file ownership. Skipping steps or reordering
    them creates cryptic permission errors and missing library failures that waste
    hours of troubleshooting time.


    ## Step-by-Step Installation Walkthrough


    The deployment begins with system preparation. Connect to your server via SSH
    and update the package repositories to current versions. Debian 12 ships with
    PostgreSQL 16, which provides the JSON indexing and full-text search capabilities
    Odoo requires for efficient record filtering and inventory lookups. Install PostgreSQL
    first, create a dedicated database user named ''odoo'' with superuser privileges,
    and initialize an empty database that Odoo will populate during first launch.


    Python 3.11 serves as Odoo''s runtime environment. Debian''s default repositories
    include the correct version along with essential development headers and build
    tools. Install the full Python development package, not just the interpreter,
    because Odoo''s requirements include C-extension libraries like lxml and Pillow
    that compile native code during installation. Missing gcc or python-dev packages
    cause installation failures with unclear error messages.


    wkhtmltopdf handles PDF generation for invoices, reports, and shipping labels.
    Odoo embeds this external tool through system calls, so installation location
    and permissions matter. Download the version specifically packaged for Debian
    12 from wkhtmltopdf.org, not your distribution''s repositories—the packaged version
    includes Qt patches that fix rendering issues with complex CSS layouts and ensure
    consistent page breaks in multi-page reports.


    Create a system user named ''odoo'' to run the application process. This dedicated
    user provides security isolation—if attackers compromise the Odoo process, they
    gain only ''odoo'' user permissions, not root access to your entire system. Configure
    this user without shell access and with a locked password, then clone Odoo''s
    source repository into /opt/odoo/odoo18/ with this user as the owner.


    The configuration file at /etc/odoo/odoo.conf contains parameters that determine
    Odoo''s runtime behavior. Set the master password (admin_passwd) to a strong random
    string—this password protects database creation, backup restoration, and module
    installation operations. Configure worker processes using the formula (CPU cores
    × 2) + 1 to balance concurrency with memory usage. Set proxy_mode = True if you''ll
    add NGINX reverse proxy later, which most production deployments require for SSL
    termination.


    The systemd service configuration ensures Odoo starts automatically after server
    reboots and restarts after crashes. Create /etc/systemd/system/odoo.service with
    proper User, Group, and ExecStart directives pointing to Odoo''s binary and configuration
    file. Enable the service with systemctl enable, then start it with systemctl start.
    Check status with systemctl status odoo—you should see "active (running)" and
    log entries showing successful database connection.


    ## Database Performance Tuning


    PostgreSQL''s default configuration optimizes for minimal memory usage, not performance.
    Your Odoo database will execute thousands of queries daily—product searches, invoice
    generation, inventory updates—and default settings leave 90% of available RAM
    unused. Edit postgresql.conf to set shared_buffers = 25% of system RAM, effective_cache_size
    = 50% of system RAM, and work_mem = 16MB for complex query optimization.


    Maintenance tasks prevent performance degradation over time. Configure PostgreSQL
    to automatically vacuum deleted records, which accumulate as users edit and delete
    transactions. Enable autovacuum with aggressive settings: autovacuum_max_workers
    = 3, autovacuum_naptime = 10 seconds. Create a weekly cron job to run REINDEX
    DATABASE on your Odoo database, which rebuilds indexes fragmented by constant
    updates.


    ## Security Hardening


    The installation creates an accessible Odoo instance on port 8069, but production
    security requires multiple layers. Install NGINX as a reverse proxy to handle
    HTTPS termination, request filtering, and rate limiting. Configure NGINX to forward
    requests from port 443 to Odoo''s port 8069, setting proxy_read_timeout to 600
    seconds—Odoo''s module installation and large report generation operations require
    several minutes to complete, and lower timeouts kill these requests prematurely.


    Let''s Encrypt provides free SSL certificates with automated renewal. Install
    Certbot, run certification for your domain, and add a cron job for automatic renewal
    every 60 days. SSL certificates expire after 90 days, but renewing at 60 days
    provides safety margin for renewal failures or network issues.


    Firewall configuration requires precision. Use UFW (Uncomplicated Firewall) to
    allow SSH (port 22), HTTP (port 80), and HTTPS (port 443) inbound traffic. Block
    direct access to port 8069 from external networks—Odoo should only accept connections
    from NGINX''s localhost proxy. This prevents attackers from bypassing your reverse
    proxy''s security features and accessing Odoo''s administrative interfaces directly.


    ## Backup Strategy


    Production deployments require automated, tested backups before you add real business
    data. Install the backup script from the Fortress Protection module, which performs
    PostgreSQL dumps with compression, copies filestore attachments, and syncs backups
    to off-site storage. Schedule daily backups at 2 AM when user activity minimizes,
    and retain 30 daily backups, 12 monthly backups, and 7 yearly backups.


    Test restoration procedures within the first week. Create a test instance, restore
    yesterday''s backup, and verify all data loads correctly and modules function
    properly. Untested backups provide false security—you only discover corruption
    or missing steps when disaster strikes and recovery fails.


    ## Monitoring and Operational Visibility


    The free Odoo Health Monitor script tracks CPU usage, memory consumption, disk
    space, and PostgreSQL connection counts every 5 minutes. Configure alert thresholds
    at 80% CPU utilization and 500MB free memory—these provide early warning before
    performance degrades to user-visible levels. Log monitoring output to /var/log/odoo-health.log
    for historical analysis.


    Monitor disk space growth carefully. Odoo''s filestore directory accumulates uploaded
    attachments, generated PDFs, and cached report images. Plan for 10-20GB growth
    annually for typical SMB usage, more for document-heavy workflows. Set up alerts
    when free space drops below 20% to prevent emergency cleanups during month-end
    processing.


    ## Post-Installation Verification


    Access Odoo through your browser at https://yourdomain.com. The first-access setup
    wizard prompts for master password verification, database creation, and initial
    module selection. Install at minimum: Sales, Inventory, and Accounting for business
    operations visibility. Add Website and E-commerce if you sell online. Skip unnecessary
    modules initially—you can install them later without disrupting operations.


    Create administrative and standard user accounts immediately. Don''t use the default
    ''admin'' user for daily operations—create a personal account with limited privileges
    and reserve ''admin'' for system configuration and module installation. This separation
    prevents accidental configuration changes and provides audit trail clarity.


    The deployment time from SSH connection to operational Odoo instance takes 30-45
    minutes for experienced administrators, 60-90 minutes for first-time installations.
    This time investment establishes infrastructure that supports business operations
    for years, not months. You built a production-grade foundation that handles growth
    from ten to one hundred users without architectural rebuilds—that scalability
    and control define digital sovereignty.

    '
conversion_assets:
- component_type: callout-box
  placement_hint: mid_guide
  generated_copy:
    headline: Use the Requirements Calculator
    body: Calculate exact server specs before deployment
    cta_text: Use the Requirements Calculator
    cta_link: /toolkit/odoo-requirements-calculator/
    cta_context: Priority 0.5 link from intelligent linking system
- component_type: callout-box
  placement_hint: post_technical
  generated_copy:
    headline: Free Backup Health Check
    body: Test your backup strategy in 60 seconds
    cta_text: Free Backup Health Check
    cta_link: /toolkit/odoo-backup-readiness-checker/
    cta_context: Priority 1.5 link from intelligent linking system
intelligent_links:
- link_url: /guides/upgrade-odoo-16-to-18/
  anchor_text: Upgrade from Odoo 16 to 18
  context: Plan for future version upgrades
  priority: 5
- link_url: /guides/install-odoo-18-on-ubuntu-2204/
  anchor_text: Install on Ubuntu 22.04
  context: Alternative OS options
  priority: 8
visualizations:
- chart_type: mermaid
  placement_hint: after_introduction
  data_context: os_installation workflow visualization
  mermaid_chart_syntax: "flowchart LR\n    Start([Ubuntu Server]) --> Update[Update\
    \ System]\n    Update --> Postgres[Install PostgreSQL 15]\n    Postgres --> Python[Install\
    \ Python 3.10+]\n    Python --> Odoo[Install Odoo 18]\n    Odoo --> Config[Configure\
    \ systemd]\n    Config --> Nginx[Setup Nginx Proxy]\n    Nginx --> End([Production\
    \ Ready])\n\n    classDef step fill:#f8f9fa,stroke:#6c757d,stroke-width:1px\n\
    \    classDef milestone fill:#d4edda,stroke:#28a745,stroke-width:2px\n\n    class\
    \ Update,Postgres,Python,Odoo,Config,Nginx step\n    class Start,End milestone"
